<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>repox</groupId>
		<artifactId>repox-server</artifactId>
		<version>3.2.1-SNAPSHOT</version>
	</parent>

	<name>REPOX-SERVER-REST-JERSEY</name>
	<artifactId>repox-server-rest-jersey</artifactId>
	<version>3.2.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<properties>
		<documentation.dir>src/main/webapp/doc/</documentation.dir>
		<development.url>http://localhost:8080/repox/rest</development.url>
		<development.url.doc>http://localhost:8080/repox/doc</development.url.doc>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>${skipTests}</skipTests>
					<argLine>-XX:-UseSplitVerifier</argLine>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<warName>repox</warName>
					<attachClasses>true</attachClasses>
					<warSourceDirectory>src/main/webapp</warSourceDirectory>
					<!-- <failOnMissingWebXml>false</failOnMissingWebXml> -->
					<packagingExcludes>
						WEB-INF/lib/spring-2.5.jar
					</packagingExcludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack-shared-resources</id>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<phase>generate-resources</phase>
						<configuration>
							<!-- Use as much as needed to be specific or else it will unpack dependencies 
								that are not needed...also scope,type,classifier etc -->
							<outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/classes</outputDirectory>
							<includeArtifacIds>repox-resources</includeArtifacIds>
							<includeGroupIds>${project.groupId}</includeGroupIds>
							<includeClassifiers>resources</includeClassifiers>
							<includeTypes>zip</includeTypes>
							<excludeTransitive>true</excludeTransitive>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<!-- The development profile is only used while development and what it 
			really does is copy the needed property files from the classes folder to 
			the default maven resources folder so it can be deployed in an IDE(ex. eclipse) 
			for testing -->
		<profile>
			<id>copy-resources</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-resources</id>
								<phase>process-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>src/main/resources</outputDirectory>
									<resources>
										<resource>
											<directory>${project.build.directory}/${project.build.finalName}/WEB-INF/classes</directory>
											<filtering>true</filtering>
											<includes>
												<include>configuration.properties</include>
												<include>gui.properties</include>
												<include>log4j.properties</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Use the below profile to clean resources folder the copy-resources 
			was used before -->
		<profile>
			<id>production</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-clean-plugin</artifactId>
						<configuration>
							<filesets>
								<fileset>
									<directory>src/main/resources</directory>
									<includes>
										<include>configuration.properties</include>
										<include>gui.properties</include>
										<include>log4j.properties</include>
									</includes>
									<followSymlinks>false</followSymlinks>
								</fileset>
							</filesets>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>generate-doc</id>
			<build>
				<plugins>
					<!-- SWAGGER -->
					<plugin>
						<groupId>com.github.kongchen</groupId>
						<artifactId>swagger-maven-plugin</artifactId>
						<version>2.3.4</version>
						<configuration>
							<apiSources>
								<apiSource>
									<locations>org.theeuropeanlibrary.repox.rest.servlets</locations>
									<apiVersion>${project.version}</apiVersion>
									<basePath>${development.url}</basePath>
									<!-- <basePath>http://localhost:8181/repox-server-rest-jersey-0.0.1-SNAPSHOT/rest</basePath> -->
									<swaggerInternalFilter>com.wordnik.swagger.config.DefaultSpecFilter</swaggerInternalFilter>
									<!-- General parameters END -->

									<apiInfo>
										<title>REPOX SERVER REST JERSEY</title>
										<description>A RESTful service implemetned using Jersey 2, for
											accessing the repox resources.</description>
										<!-- <termsOfServiceUrl>http://www.github.com/kongchen/swagger-maven-plugin</termsOfServiceUrl> -->
										<!-- <contact>kongchen#gmail$com</contact> -->
										<license>Apache 2.0</license>
										<licenseUrl>http://www.apache.org/licenses/LICENSE-2.0.html</licenseUrl>
									</apiInfo>

									<!-- Document generation parameters BEGIN -->
									<outputTemplate>templates/strapdown.html.mustache</outputTemplate>
									<mustacheFileRoot>templates/</mustacheFileRoot>
									<outputPath>${documentation.dir}document.html</outputPath>
									<!--Document generation parameters END -->

									<!-- Swagger JSON parameters BEGIN -->
									<swaggerDirectory>${documentation.dir}</swaggerDirectory>
									<swaggerUIDocBasePath>${development.url.doc}</swaggerUIDocBasePath>
									<useOutputFlatStructure>true</useOutputFlatStructure>
								</apiSource>
							</apiSources>
						</configuration>
						<executions>
							<execution>
								<phase>generate-resources</phase>
								<goals>
									<goal>generate</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencies>
		<!-- POWERMOCKITO, Keep it at first position -->
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- SWAGGER -->
		<dependency>
			<groupId>com.wordnik</groupId>
			<artifactId>swagger-jersey2-jaxrs_2.11</artifactId>
			<exclusions>
				<exclusion>
					<groupId>javax.ws.rs</groupId>
					<artifactId>jsr311-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.wordnik</groupId>
			<artifactId>swagger-core_2.11</artifactId>
		</dependency>

		<!-- REPOX resources -->
		<dependency>
			<groupId>repox</groupId>
			<artifactId>repox-resources</artifactId>
			<classifier>resources</classifier>
			<type>zip</type>
			<!-- Make sure this isn't included on any classpath -->
			<scope>provided</scope>
		</dependency>

		<!-- JERSEY libs(Versions are managed from the bom) -->
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-jaxb</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-multipart</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
		</dependency>

		<!-- (Un)Marshal for JSON -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>3.2.8.RELEASE</version>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- ... other dependency elements ... -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>3.2.5.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>

		<!-- Test Dependencies -->
		<dependency>
			<groupId>org.glassfish.jersey.test-framework.providers</groupId>
			<artifactId>jersey-test-framework-provider-grizzly2</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>
</project>
